// Copyright 2017 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// The FlatBuffers schema for Firebase Auth rpc response. The order does not
// matter since we do not store nor receive serialized object. Table Response
// mainly provides each field name with type for parsing response JSON string.
// For a particular response type, not all fields are set. In addition, for a
// particular response type, extra fields not specified in table Response are
// irrelevant to our SDK and thus simply ignored.

namespace firebase.auth.fbs;

table ProviderUserInfo {
  providerId:string;
  displayName:string;
  photoUrl:string;
  federatedId:string;
  email:string;
  phoneNumber:string;
}

table User {
  localId:string;
  displayName:string;
  email:string;
  photoUrl:string;
  emailVerified:bool;
  passwordHash:string;
  phoneNumber:string;
  passwordUpdatedAt:double;
  validSince:long; // Note: the format here is seconds.
  lastLoginAt:long;
  createdAt:long;
  providerUserInfo:[ProviderUserInfo];
}

table ErrorDetails {
  reason:string;
}

table Error {
  code:long;
  message:string;
  errors:[ErrorDetails];
}

table Response {
  kind:string;
  idToken:string;
  refreshToken:string;
  expiresIn:string;
  localId:string;

  allProviders:[string];
  registered:bool;

  users:[User];

  receipt:string;

  displayName:string;
  email:string;
  photoUrl:string;

  access_token:string;
  refresh_token:string;
  id_token:string;
  expires_in:string;

  isNewUser:bool;

  passwordHash:string;

  providerId:string;
  rawUserInfo:string;

  providerUserInfo:[ProviderUserInfo];

  needConfirmation: bool;

  error:Error;
}

root_type Response;
